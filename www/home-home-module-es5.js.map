{"version":3,"sources":["./src/app/home/home.page.html","./src/app/home/home.module.ts","./src/app/home/home.page.ts"],"names":[],"mappings":"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","file":"home-home-module-es5.js","sourcesContent":["module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"{{user.statusColor}}\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-badge color=\\\"light\\\" *ngIf=\\\"user.status == 0\\\" [routerLink]=\\\"['/profile']\\\">\\n        Unverified</ion-badge>\\n      <ion-button fill=\\\"clear\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"notifications\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n\\n  <ion-toolbar color=\\\"{{user.statusColor}}\\\">\\n    <ion-searchbar placeholder=\\\"Search Items\\\" [(ngModel)]=\\\"searchQuery\\\" (ionChange)=\\\"search(searchQuery)\\\">\\n    </ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<div class=\\\"searchResult\\\" *ngIf=\\\"searchResults.length > 0\\\">\\n  <ion-list>\\n    <ion-item *ngFor=\\\"let result of searchResults\\\">\\n      {{result.name}}\\n    </ion-item>\\n  </ion-list>\\n</div>\\n\\n<ion-content>\\n  <ion-list lines=\\\"none\\\">\\n    <ion-list-header>\\n      <ion-label>browse by categories</ion-label>\\n    </ion-list-header>\\n    <app-slider [options]=\\\"categorySliderOpts\\\"></app-slider>\\n  </ion-list>\\n\\n  <ion-list lines=\\\"none\\\">\\n    <ion-list-header>\\n      <ion-label>browse by company</ion-label>\\n    </ion-list-header>\\n    <app-slider [options]=\\\"companySliderOpts\\\"></app-slider>\\n  </ion-list>\\n\\n  <ion-list lines=\\\"none\\\" class=\\\"itemList\\\">\\n    <ion-segment value=\\\"auction\\\" (ionChange)=\\\"segmentChanged($event)\\\" color=\\\"primary\\\">\\n      <ion-segment-button size-xs=\\\"6\\\" value=\\\"auction\\\" *ngIf=\\\"user.status != 0\\\">\\n        <ion-label>Auction</ion-label>\\n      </ion-segment-button>\\n      <ion-segment-button size-xs=\\\"6\\\" value=\\\"display\\\">\\n        <ion-label>On Display</ion-label>\\n      </ion-segment-button>\\n    </ion-segment>\\n\\n    <ion-grid>\\n      <ion-row>\\n        <ion-col size-xs=\\\"6\\\" *ngFor=\\\"let items of activeItems\\\" class=\\\"item\\\">\\n          <div class=\\\"badgeHolder\\\">\\n            <div class=\\\"bidBadge\\\" *ngIf=\\\"items.NoOfBidders != null\\\">\\n              {{items.NoOfBidders + ' Bidders'}}\\n            </div>\\n          </div>\\n          <img src=\\\"../../assets/shapes.svg\\\" onerror=\\\"this.onerror = null; this.src = '../assets/placeholder.png'\\\" />\\n          <ion-text>\\n            <h1>\\n              <ion-icon name=\\\"star\\\"></ion-icon>\\n              <ion-icon name=\\\"star\\\"></ion-icon>\\n              <ion-icon name=\\\"star\\\"></ion-icon>\\n              <ion-icon name=\\\"star\\\"></ion-icon>\\n              <ion-icon name=\\\"star-half\\\"></ion-icon>\\n            </h1>\\n            <h5>{{items.ProductName}}</h5>\\n            <h5 class=\\\"price\\\"> {{items.CurrentBidPrice | currency : '&#8369; '}}</h5>\\n          </ion-text>\\n        </ion-col>\\n      </ion-row>\\n    </ion-grid>\\n  </ion-list>\\n\\n  <ion-infinite-scroll threshold=\\\"10px\\\" (ionInfinite)=\\\"loadData()\\\">\\n    <ion-infinite-scroll-content style=\\\"padding-top: 10px;\\\" loadingSpinner=\\\"crescent\\\">\\n    </ion-infinite-scroll-content>\\n  </ion-infinite-scroll>\\n</ion-content>\"","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\nimport { ComponentsModule } from '../components/components.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ComponentsModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule { }\n","import { Component, ViewChild, OnDestroy } from '@angular/core';\nimport { ProductsService } from '../services/products.service';\nimport { IonInfiniteScroll } from '@ionic/angular';\nimport { AuthService } from '../services/auth.service';\nimport { CommonService } from '../services/common.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnDestroy {\n  @ViewChild(IonInfiniteScroll, { static: false }) infiniteScroll: IonInfiniteScroll;\n\n  displayItems = [];\n  auctionItems = [];\n  activeItems = [];\n\n  lazyLoadIndex = {\n    auction: 0,\n    display: 0\n  };\n\n  currItemStatus = 1;\n\n  categorySliderOpts = {\n    sliderOpts: {\n      slidesPerView: 2,\n    },\n    style: 'box',\n    sliderBrowseAllText: 'See all categories',\n    slideRedirect: '/category-view',\n    sliderId: 1,\n    requestUrl: '/category?id=0&key=',\n    dataObject: {\n      id: 'CategoryId',\n      name: 'CategoryName'\n    }\n  }\n\n  companySliderOpts = {\n    sliderOpts: {\n      slidesPerView: 3,\n    },\n    style: 'circle',\n    sliderBrowseAllText: 'See all companies',\n    slideRedirect: '/company-view',\n    sliderId: 2,\n    requestUrl: '/branch',\n    dataObject: {\n      id: 'BranchId',\n      name: 'BranchName'\n    }\n  }\n\n  //api\n  fetchDisplayService;\n  fetchAuctionService;\n\n  //common\n  user;\n\n\n  constructor(private productsService: ProductsService, private auth: AuthService, public common: CommonService) {\n    this.user = this.common.user;\n  }\n\n  searchResults = [];\n\n  search(q) {\n    if (q != \"\")\n      this.searchResults.push(q)\n    else\n      this.searchResults = []\n\n  }\n\n  ngOnInit() {\n    this.fetchAuction();\n    this.fetchDisplay();\n  }\n\n  async loadData() {\n    if (this.currItemStatus == 0)\n      await this.fetchDisplay();\n    else\n      await this.fetchAuction();\n\n    this.infiniteScroll.complete();\n\n  }\n\n  fetchDisplay() {\n    this.fetchDisplayService = this.productsService.getDisplayItems(this.lazyLoadIndex.display)\n      .subscribe(data => {\n        for (let index in data) {\n          this.displayItems.push(data[index]);\n          this.lazyLoadIndex.display = data[index][\"rowNum\"];\n        }\n        this.activeItems = this.displayItems\n\n        this.fetchDisplayService.unsubscribe();\n      });\n  };\n\n  fetchAuction() {\n    this.fetchAuctionService = this.productsService.getAuctionItems(this.lazyLoadIndex.auction)\n      .subscribe(data => {\n        for (let index in data) {\n          this.auctionItems.push(data[index]);\n          this.lazyLoadIndex.auction = data[index][\"rowNum\"];\n        }\n        this.activeItems = this.auctionItems\n\n        this.fetchAuctionService.unsubscribe();\n      });\n  };\n\n  segmentChanged(e) {\n    if (e.detail.value == 'display') {\n      this.activeItems = this.displayItems;\n      this.currItemStatus = 0;\n\n    }\n    else {\n      this.activeItems = this.auctionItems;\n      this.currItemStatus = 1;\n    }\n  }\n\n  ngOnDestroy() {\n    this.fetchDisplayService.unsubscribe();\n    this.fetchAuctionService.unsubscribe();\n  }\n\n}\n"],"sourceRoot":""}